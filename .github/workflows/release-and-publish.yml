name: Release & Publish

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  release:
    name: Bump, Tag, Publish & Release
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Lint & fix
        run: yarn lint-fix

      - name: Build
        run: yarn build

      - name: Determine version bump from PR label
        id: bump
        uses: actions/github-script@v7
        with:
          script: |
            const allowed = ['major', 'minor', 'patch'];
            const labels = (context.payload.pull_request.labels || []).map(l => l.name.toLowerCase());
            const found = labels.find(l => allowed.includes(l));
            if (!found) {
              core.setFailed('Missing required label (major|minor|patch).');
            } else {
              core.setOutput('bump', found);
            }

      - name: Git config (bot user)
        run: |
          git config user.name  "wri-bot"
          git config user.email "bot@wri.dev"

      - name: Bump version & create tag
        run: |
          npm version ${{ steps.bump.outputs.bump }} -m 'chore(release): %s'

      - name: Read new version
        id: ver
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"


      - name: Push commit & tags
        run: git push origin HEAD:main --follow-tags

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: Create GitHub Release (auto-notes)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.ver.outputs.version }}
          name: v${{ steps.ver.outputs.version }}
          generate_release_notes: true
